version: '3.8'

services:
  # NestJS API
  nestjs-api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: solana-blockmeter-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.mainnet-beta.solana.com}
      - SOLANA_COMMITMENT_LEVEL=${SOLANA_COMMITMENT_LEVEL:-confirmed}
    depends_on:
      - redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NextJS Frontend
  nextjs-web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: solana-blockmeter-web
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://nestjs-api:3000
    depends_on:
      - nestjs-api
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: solana-blockmeter-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - nestjs-api
      - nextjs-web
    networks:
      - app-network

  # Redis (for local development only - we using ElastiCache in production)
  redis:
    image: redis:7-alpine
    container_name: solana-blockmeter-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
